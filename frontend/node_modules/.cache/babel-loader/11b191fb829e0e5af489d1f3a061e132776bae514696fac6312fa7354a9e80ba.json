{"ast":null,"code":"import * as ERROR_MSGS from \"../constants/error_msgs\";\nimport { BindingScopeEnum, BindingTypeEnum } from \"../constants/literal_types\";\nimport { BindingInWhenOnSyntax } from \"./binding_in_when_on_syntax\";\nimport { BindingWhenOnSyntax } from \"./binding_when_on_syntax\";\nvar BindingToSyntax = function () {\n  function BindingToSyntax(binding) {\n    this._binding = binding;\n  }\n  BindingToSyntax.prototype.to = function (constructor) {\n    this._binding.type = BindingTypeEnum.Instance;\n    this._binding.implementationType = constructor;\n    return new BindingInWhenOnSyntax(this._binding);\n  };\n  BindingToSyntax.prototype.toSelf = function () {\n    if (typeof this._binding.serviceIdentifier !== \"function\") {\n      throw new Error(\"\" + ERROR_MSGS.INVALID_TO_SELF_VALUE);\n    }\n    var self = this._binding.serviceIdentifier;\n    return this.to(self);\n  };\n  BindingToSyntax.prototype.toConstantValue = function (value) {\n    this._binding.type = BindingTypeEnum.ConstantValue;\n    this._binding.cache = value;\n    this._binding.dynamicValue = null;\n    this._binding.implementationType = null;\n    this._binding.scope = BindingScopeEnum.Singleton;\n    return new BindingWhenOnSyntax(this._binding);\n  };\n  BindingToSyntax.prototype.toDynamicValue = function (func) {\n    this._binding.type = BindingTypeEnum.DynamicValue;\n    this._binding.cache = null;\n    this._binding.dynamicValue = func;\n    this._binding.implementationType = null;\n    return new BindingInWhenOnSyntax(this._binding);\n  };\n  BindingToSyntax.prototype.toConstructor = function (constructor) {\n    this._binding.type = BindingTypeEnum.Constructor;\n    this._binding.implementationType = constructor;\n    this._binding.scope = BindingScopeEnum.Singleton;\n    return new BindingWhenOnSyntax(this._binding);\n  };\n  BindingToSyntax.prototype.toFactory = function (factory) {\n    this._binding.type = BindingTypeEnum.Factory;\n    this._binding.factory = factory;\n    this._binding.scope = BindingScopeEnum.Singleton;\n    return new BindingWhenOnSyntax(this._binding);\n  };\n  BindingToSyntax.prototype.toFunction = function (func) {\n    if (typeof func !== \"function\") {\n      throw new Error(ERROR_MSGS.INVALID_FUNCTION_BINDING);\n    }\n    var bindingWhenOnSyntax = this.toConstantValue(func);\n    this._binding.type = BindingTypeEnum.Function;\n    this._binding.scope = BindingScopeEnum.Singleton;\n    return bindingWhenOnSyntax;\n  };\n  BindingToSyntax.prototype.toAutoFactory = function (serviceIdentifier) {\n    this._binding.type = BindingTypeEnum.Factory;\n    this._binding.factory = function (context) {\n      var autofactory = function () {\n        return context.container.get(serviceIdentifier);\n      };\n      return autofactory;\n    };\n    this._binding.scope = BindingScopeEnum.Singleton;\n    return new BindingWhenOnSyntax(this._binding);\n  };\n  BindingToSyntax.prototype.toAutoNamedFactory = function (serviceIdentifier) {\n    this._binding.type = BindingTypeEnum.Factory;\n    this._binding.factory = function (context) {\n      return function (named) {\n        return context.container.getNamed(serviceIdentifier, named);\n      };\n    };\n    return new BindingWhenOnSyntax(this._binding);\n  };\n  BindingToSyntax.prototype.toProvider = function (provider) {\n    this._binding.type = BindingTypeEnum.Provider;\n    this._binding.provider = provider;\n    this._binding.scope = BindingScopeEnum.Singleton;\n    return new BindingWhenOnSyntax(this._binding);\n  };\n  BindingToSyntax.prototype.toService = function (service) {\n    this.toDynamicValue(function (context) {\n      return context.container.get(service);\n    });\n  };\n  return BindingToSyntax;\n}();\nexport { BindingToSyntax };","map":{"version":3,"names":["ERROR_MSGS","BindingScopeEnum","BindingTypeEnum","BindingInWhenOnSyntax","BindingWhenOnSyntax","BindingToSyntax","binding","_binding","prototype","to","constructor","type","Instance","implementationType","toSelf","serviceIdentifier","Error","INVALID_TO_SELF_VALUE","self","toConstantValue","value","ConstantValue","cache","dynamicValue","scope","Singleton","toDynamicValue","func","DynamicValue","toConstructor","Constructor","toFactory","factory","Factory","toFunction","INVALID_FUNCTION_BINDING","bindingWhenOnSyntax","Function","toAutoFactory","context","autofactory","container","get","toAutoNamedFactory","named","getNamed","toProvider","provider","Provider","toService","service"],"sources":["../../src/syntax/binding_to_syntax.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}