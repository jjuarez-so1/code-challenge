{"ast":null,"code":"var _jsxFileName = \"/Users/josephjuarez/Documents/Dev/jja/notifications-code-challenge/gila-front/src/components/kpi-cards/KpiCards.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./kpi-cards.scss\";\nimport { useEffect, useState } from \"react\";\nimport Widget from \"../widget/Widget\";\nimport { myContainer } from \"../../inversify/inversify.config\";\nimport { TYPES } from \"../../inversify/types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst KpiCards = () => {\n  _s();\n  const [kpis, setKpis] = useState(null);\n  useEffect(() => {\n    fetchKpis();\n  }, []);\n  async function fetchKpis() {\n    try {\n      const myRepo = myContainer.get(TYPES.Repo);\n      const kpiData = await myRepo.fetchKpis();\n      setKpis(kpiData);\n    } catch (error) {\n      console.error(\"Error fetching KPIs:\", error);\n    }\n  }\n  const isLoading = kpis === null;\n  const allNotificationsEmpty = kpis !== null && Object.values(kpis).every(val => val === null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kpiCardsContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"widgets\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading KPIs...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this) : allNotificationsEmpty ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No notifications sent yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [kpis.users !== null && /*#__PURE__*/_jsxDEV(Widget, {\n          type: kpis.users.title,\n          quantity: kpis.users.quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 49\n        }, this), kpis.smsNotifications !== null && /*#__PURE__*/_jsxDEV(Widget, {\n          type: kpis.smsNotifications.title,\n          quantity: kpis.smsNotifications.quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 60\n        }, this), kpis.emailNotifications !== null && /*#__PURE__*/_jsxDEV(Widget, {\n          type: kpis.emailNotifications.title,\n          quantity: kpis.emailNotifications.quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 62\n        }, this), kpis.pushNotifications !== null && /*#__PURE__*/_jsxDEV(Widget, {\n          type: kpis.pushNotifications.title,\n          quantity: kpis.pushNotifications.quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 61\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(KpiCards, \"0dCLGp354+BngZmTpyMWOi4ClAk=\");\n_c = KpiCards;\nexport default KpiCards;\nvar _c;\n$RefreshReg$(_c, \"KpiCards\");","map":{"version":3,"names":["React","useEffect","useState","Widget","myContainer","TYPES","jsxDEV","_jsxDEV","Fragment","_Fragment","KpiCards","_s","kpis","setKpis","fetchKpis","myRepo","get","Repo","kpiData","error","console","isLoading","allNotificationsEmpty","Object","values","every","val","className","children","fileName","_jsxFileName","lineNumber","columnNumber","users","type","title","quantity","smsNotifications","emailNotifications","pushNotifications","_c","$RefreshReg$"],"sources":["/Users/josephjuarez/Documents/Dev/jja/notifications-code-challenge/gila-front/src/components/kpi-cards/KpiCards.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./kpi-cards.scss\"\n\nimport { useEffect, useState } from \"react\";\nimport Widget from \"../widget/Widget\"\nimport { myContainer } from \"../../inversify/inversify.config\";\nimport { TYPES } from \"../../inversify/types\";\nimport KpiData from \"./KpiData\";\nimport { KpiRepository } from \"../../repository/KpiRepository\";\n\nconst KpiCards = () => {\n    const [kpis, setKpis] = useState<KpiData|null>(null);\n\n    useEffect(() => {\n        fetchKpis();\n    }, []);\n\n    async function fetchKpis() {\n        try {\n            const myRepo = myContainer.get<KpiRepository>(TYPES.Repo);\n            const kpiData = await myRepo.fetchKpis();\n            setKpis(kpiData);\n        } catch (error) {\n            console.error(\"Error fetching KPIs:\", error);\n        }\n    }\n\n    const isLoading = kpis === null;\n    const allNotificationsEmpty = kpis !== null && Object.values(kpis).every(val => val === null);\n\n    return (\n        <div className=\"kpiCardsContainer\">\n            <div className=\"widgets\">\n                {isLoading ? (\n                    <p>Loading KPIs...</p>\n                ) : allNotificationsEmpty ? (\n                    <p>No notifications sent yet.</p>\n                ) : (\n                    <>\n                        {kpis.users !== null && <Widget type={kpis.users.title} quantity={kpis.users.quantity} />}\n                        {kpis.smsNotifications !== null && <Widget type={kpis.smsNotifications.title} quantity={kpis.smsNotifications.quantity} />}\n                        {kpis.emailNotifications !== null && <Widget type={kpis.emailNotifications.title} quantity={kpis.emailNotifications.quantity} />}\n                        {kpis.pushNotifications !== null && <Widget type={kpis.pushNotifications.title} quantity={kpis.pushNotifications.quantity} />}\n                    </>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default KpiCards;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}