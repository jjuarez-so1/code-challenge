{"ast":null,"code":"// file inversify.config.ts\n\nimport { Container } from \"inversify\";\nimport { TYPES } from \"./types\";\nimport { Ninja, Katana, Shuriken, KpiRepositoryImpl, NotificationsRepositoryImpl } from \"./entities\";\nimport { CATEGORIES } from \"../constants/constants\";\nconst myContainer = new Container();\nmyContainer.bind(TYPES.Warrior).to(Ninja);\nmyContainer.bind(TYPES.Repo).to(KpiRepositoryImpl);\nmyContainer.bind(TYPES.NotificationsRepository).to(NotificationsRepositoryImpl);\nmyContainer.bind(TYPES.Weapon).to(Katana);\nmyContainer.bind(TYPES.ThrowableWeapon).to(Shuriken);\nmyContainer.bind(TYPES.ApiBaseUrl).toConstantValue(\"http://localhost:8080/api\");\nmyContainer.bind(TYPES.Categories).toConstantValue(CATEGORIES);\nexport { myContainer };","map":{"version":3,"names":["Container","TYPES","Ninja","Katana","Shuriken","KpiRepositoryImpl","NotificationsRepositoryImpl","CATEGORIES","myContainer","bind","Warrior","to","Repo","NotificationsRepository","Weapon","ThrowableWeapon","ApiBaseUrl","toConstantValue","Categories"],"sources":["/Users/josephjuarez/Documents/Dev/jja/notifications-code-challenge/gila-front/src/inversify/inversify.config.ts"],"sourcesContent":["// file inversify.config.ts\n\nimport { Container } from \"inversify\";\nimport { TYPES } from \"./types\";\nimport { Warrior, Weapon, ThrowableWeapon, NotificationsRepository, Category } from \"./interfaces\";\nimport { Ninja, Katana, Shuriken, KpiRepositoryImpl, NotificationsRepositoryImpl } from \"./entities\";\nimport { KpiRepository } from \"../repository/KpiRepository\";\nimport { CATEGORIES } from \"../constants/constants\";\n\nconst myContainer = new Container();\nmyContainer.bind<Warrior>(TYPES.Warrior).to(Ninja);\nmyContainer.bind<KpiRepository>(TYPES.Repo).to(KpiRepositoryImpl);\nmyContainer.bind<NotificationsRepository>(TYPES.NotificationsRepository).to(NotificationsRepositoryImpl);\nmyContainer.bind<Weapon>(TYPES.Weapon).to(Katana);\nmyContainer.bind<ThrowableWeapon>(TYPES.ThrowableWeapon).to(Shuriken);\nmyContainer.bind<string>(TYPES.ApiBaseUrl).toConstantValue(\"http://localhost:8080/api\");\nmyContainer.bind<Category[]>(TYPES.Categories).toConstantValue(CATEGORIES);\n\nexport { myContainer };"],"mappings":"AAAA;;AAEA,SAASA,SAAS,QAAQ,WAAW;AACrC,SAASC,KAAK,QAAQ,SAAS;AAE/B,SAASC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,iBAAiB,EAAEC,2BAA2B,QAAQ,YAAY;AAEpG,SAASC,UAAU,QAAQ,wBAAwB;AAEnD,MAAMC,WAAW,GAAG,IAAIR,SAAS,CAAC,CAAC;AACnCQ,WAAW,CAACC,IAAI,CAAUR,KAAK,CAACS,OAAO,CAAC,CAACC,EAAE,CAACT,KAAK,CAAC;AAClDM,WAAW,CAACC,IAAI,CAAgBR,KAAK,CAACW,IAAI,CAAC,CAACD,EAAE,CAACN,iBAAiB,CAAC;AACjEG,WAAW,CAACC,IAAI,CAA0BR,KAAK,CAACY,uBAAuB,CAAC,CAACF,EAAE,CAACL,2BAA2B,CAAC;AACxGE,WAAW,CAACC,IAAI,CAASR,KAAK,CAACa,MAAM,CAAC,CAACH,EAAE,CAACR,MAAM,CAAC;AACjDK,WAAW,CAACC,IAAI,CAAkBR,KAAK,CAACc,eAAe,CAAC,CAACJ,EAAE,CAACP,QAAQ,CAAC;AACrEI,WAAW,CAACC,IAAI,CAASR,KAAK,CAACe,UAAU,CAAC,CAACC,eAAe,CAAC,2BAA2B,CAAC;AACvFT,WAAW,CAACC,IAAI,CAAaR,KAAK,CAACiB,UAAU,CAAC,CAACD,eAAe,CAACV,UAAU,CAAC;AAE1E,SAASC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}