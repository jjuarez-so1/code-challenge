{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { LazyServiceIdentifer } from \"../annotation/lazy_service_identifier\";\nimport * as ERROR_MSGS from \"../constants/error_msgs\";\nimport { TargetTypeEnum } from \"../constants/literal_types\";\nimport * as METADATA_KEY from \"../constants/metadata_keys\";\nimport { getFunctionName } from \"../utils/serialization\";\nimport { Target } from \"./target\";\nfunction getDependencies(metadataReader, func) {\n  var constructorName = getFunctionName(func);\n  return getTargets(metadataReader, constructorName, func, false);\n}\nfunction getTargets(metadataReader, constructorName, func, isBaseClass) {\n  var metadata = metadataReader.getConstructorMetadata(func);\n  var serviceIdentifiers = metadata.compilerGeneratedMetadata;\n  if (serviceIdentifiers === undefined) {\n    var msg = ERROR_MSGS.MISSING_INJECTABLE_ANNOTATION + \" \" + constructorName + \".\";\n    throw new Error(msg);\n  }\n  var constructorArgsMetadata = metadata.userGeneratedMetadata;\n  var keys = Object.keys(constructorArgsMetadata);\n  var hasUserDeclaredUnknownInjections = func.length === 0 && keys.length > 0;\n  var hasOptionalParameters = keys.length > func.length;\n  var iterations = hasUserDeclaredUnknownInjections || hasOptionalParameters ? keys.length : func.length;\n  var constructorTargets = getConstructorArgsAsTargets(isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata, iterations);\n  var propertyTargets = getClassPropsAsTargets(metadataReader, func, constructorName);\n  var targets = __spreadArray(__spreadArray([], constructorTargets, true), propertyTargets, true);\n  return targets;\n}\nfunction getConstructorArgsAsTarget(index, isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata) {\n  var targetMetadata = constructorArgsMetadata[index.toString()] || [];\n  var metadata = formatTargetMetadata(targetMetadata);\n  var isManaged = metadata.unmanaged !== true;\n  var serviceIdentifier = serviceIdentifiers[index];\n  var injectIdentifier = metadata.inject || metadata.multiInject;\n  serviceIdentifier = injectIdentifier ? injectIdentifier : serviceIdentifier;\n  if (serviceIdentifier instanceof LazyServiceIdentifer) {\n    serviceIdentifier = serviceIdentifier.unwrap();\n  }\n  if (isManaged) {\n    var isObject = serviceIdentifier === Object;\n    var isFunction = serviceIdentifier === Function;\n    var isUndefined = serviceIdentifier === undefined;\n    var isUnknownType = isObject || isFunction || isUndefined;\n    if (!isBaseClass && isUnknownType) {\n      var msg = ERROR_MSGS.MISSING_INJECT_ANNOTATION + \" argument \" + index + \" in class \" + constructorName + \".\";\n      throw new Error(msg);\n    }\n    var target = new Target(TargetTypeEnum.ConstructorArgument, metadata.targetName, serviceIdentifier);\n    target.metadata = targetMetadata;\n    return target;\n  }\n  return null;\n}\nfunction getConstructorArgsAsTargets(isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata, iterations) {\n  var targets = [];\n  for (var i = 0; i < iterations; i++) {\n    var index = i;\n    var target = getConstructorArgsAsTarget(index, isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata);\n    if (target !== null) {\n      targets.push(target);\n    }\n  }\n  return targets;\n}\nfunction _getServiceIdentifierForProperty(inject, multiInject, propertyName, className) {\n  var serviceIdentifier = inject || multiInject;\n  if (serviceIdentifier === undefined) {\n    var msg = ERROR_MSGS.MISSING_INJECTABLE_ANNOTATION + \" for property \" + String(propertyName) + \" in class \" + className + \".\";\n    throw new Error(msg);\n  }\n  return serviceIdentifier;\n}\nfunction getClassPropsAsTargets(metadataReader, constructorFunc, constructorName) {\n  var classPropsMetadata = metadataReader.getPropertiesMetadata(constructorFunc);\n  var targets = [];\n  var symbolKeys = Object.getOwnPropertySymbols(classPropsMetadata);\n  var stringKeys = Object.keys(classPropsMetadata);\n  var keys = stringKeys.concat(symbolKeys);\n  for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n    var key = keys_1[_i];\n    var targetMetadata = classPropsMetadata[key];\n    var metadata = formatTargetMetadata(targetMetadata);\n    var identifier = metadata.targetName || key;\n    var serviceIdentifier = _getServiceIdentifierForProperty(metadata.inject, metadata.multiInject, key, constructorName);\n    var target = new Target(TargetTypeEnum.ClassProperty, identifier, serviceIdentifier);\n    target.metadata = targetMetadata;\n    targets.push(target);\n  }\n  var baseConstructor = Object.getPrototypeOf(constructorFunc.prototype).constructor;\n  if (baseConstructor !== Object) {\n    var baseTargets = getClassPropsAsTargets(metadataReader, baseConstructor, constructorName);\n    targets = __spreadArray(__spreadArray([], targets, true), baseTargets, true);\n  }\n  return targets;\n}\nfunction getBaseClassDependencyCount(metadataReader, func) {\n  var baseConstructor = Object.getPrototypeOf(func.prototype).constructor;\n  if (baseConstructor !== Object) {\n    var baseConstructorName = getFunctionName(baseConstructor);\n    var targets = getTargets(metadataReader, baseConstructorName, baseConstructor, true);\n    var metadata = targets.map(function (t) {\n      return t.metadata.filter(function (m) {\n        return m.key === METADATA_KEY.UNMANAGED_TAG;\n      });\n    });\n    var unmanagedCount = [].concat.apply([], metadata).length;\n    var dependencyCount = targets.length - unmanagedCount;\n    if (dependencyCount > 0) {\n      return dependencyCount;\n    } else {\n      return getBaseClassDependencyCount(metadataReader, baseConstructor);\n    }\n  } else {\n    return 0;\n  }\n}\nfunction formatTargetMetadata(targetMetadata) {\n  var targetMetadataMap = {};\n  targetMetadata.forEach(function (m) {\n    targetMetadataMap[m.key.toString()] = m.value;\n  });\n  return {\n    inject: targetMetadataMap[METADATA_KEY.INJECT_TAG],\n    multiInject: targetMetadataMap[METADATA_KEY.MULTI_INJECT_TAG],\n    targetName: targetMetadataMap[METADATA_KEY.NAME_TAG],\n    unmanaged: targetMetadataMap[METADATA_KEY.UNMANAGED_TAG]\n  };\n}\nexport { getDependencies, getBaseClassDependencyCount, getFunctionName };","map":{"version":3,"names":["LazyServiceIdentifer","ERROR_MSGS","TargetTypeEnum","METADATA_KEY","getFunctionName","Target","getDependencies","metadataReader","func","constructorName","getTargets","isBaseClass","metadata","getConstructorMetadata","serviceIdentifiers","compilerGeneratedMetadata","undefined","msg","MISSING_INJECTABLE_ANNOTATION","Error","constructorArgsMetadata","userGeneratedMetadata","keys","Object","hasUserDeclaredUnknownInjections","length","hasOptionalParameters","iterations","constructorTargets","getConstructorArgsAsTargets","propertyTargets","getClassPropsAsTargets","targets","__spreadArray","getConstructorArgsAsTarget","index","targetMetadata","toString","formatTargetMetadata","isManaged","unmanaged","serviceIdentifier","injectIdentifier","inject","multiInject","unwrap","isObject","isFunction","Function","isUndefined","isUnknownType","MISSING_INJECT_ANNOTATION","target","ConstructorArgument","targetName","i","push","_getServiceIdentifierForProperty","propertyName","className","String","constructorFunc","classPropsMetadata","getPropertiesMetadata","symbolKeys","getOwnPropertySymbols","stringKeys","concat","_i","keys_1","key","identifier","ClassProperty","baseConstructor","getPrototypeOf","prototype","constructor","baseTargets","getBaseClassDependencyCount","baseConstructorName","map","t","filter","m","UNMANAGED_TAG","unmanagedCount","apply","dependencyCount","targetMetadataMap","forEach","value","INJECT_TAG","MULTI_INJECT_TAG","NAME_TAG"],"sources":["../../src/planning/reflection_utils.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}