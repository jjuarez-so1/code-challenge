{"ast":null,"code":"var _jsxFileName = \"/Users/josephjuarez/Documents/Dev/jja/gila-front/src/pages/new-broadcast/NewBroadcast.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport List from \"../../components/list/List\";\nimport \"./new-broadcast.scss\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewBroadcast = () => {\n  _s();\n  const [selectedTopic, setSelectedTopic] = useState(\"SPORTS\");\n  const [message, setMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [lastRefreshed, setLastRefreshed] = useState(null);\n  const handleTopicChange = event => {\n    setSelectedTopic(event.target.value);\n  };\n  const handleMessageChange = event => {\n    const newMessage = event.target.value;\n    if (newMessage.length <= 150) {\n      setMessage(newMessage);\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    console.log(\"Selected topic: \", selectedTopic);\n    console.log(\"Message: \", message);\n    setIsLoading(true);\n    const broadcastData = {\n      category: selectedTopic,\n      message: message\n    };\n    try {\n      const response = await axios.post(\"http://localhost:8080/api/notifications/send\", broadcastData);\n      console.log(\"Broadcast sent:\", response.data);\n      setSelectedTopic(\"SPORTS\");\n      setMessage(\"\");\n    } catch (error) {\n      console.error(\"Error sending broadcast:\", error);\n    }\n    setIsLoading(false);\n    handleBroadcast();\n  };\n  const handleBroadcast = () => {\n    console.log('so it was runned?');\n    fetchNotifications();\n  };\n  const fetchNotifications = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/notifications/last');\n      setNotifications(response.data);\n      //setLastRefreshed(new Date());\n    } catch (error) {\n      console.error('Error fetching notifications:', error);\n    }\n  };\n\n  /*return (\n    <div className=\"newBroadcast\">\n      <div className=\"newBroadcastContainer\">\n        <div className=\"top\" style={{backgroundColor: \"red\"}}>\n          <h1>Send a new broadcast</h1>\n          <form className=\"broadcast-form\" onSubmit={handleSubmit}>\n            <div className=\"row align-items-end\">\n              <div className=\"col-md-2\">\n                <label htmlFor=\"topic\" className=\"labelForm\">Topic:</label>\n                <select id=\"topic\" className=\"form-select\" value={selectedTopic} onChange={handleTopicChange}>\n                  <option value=\"SPORTS\">SPORTS</option>\n                  <option value=\"FINANCE\">FINANCE</option>\n                  <option value=\"FILMS\">FILMS</option>\n                </select>\n              </div>\n              <div className=\"col-md-8\">\n                <label htmlFor=\"message\" className=\"labelForm\">Message:</label>\n                <textarea\n                  id=\"message\"\n                  className=\"form-control\"\n                  value={message}\n                  onChange={handleMessageChange}\n                  rows=\"1\"\n                  maxLength=\"150\"\n                />\n              </div>\n              <div className=\"col-md-2\">\n                <button type=\"submit\" className=\"btn btn-dark\" style={{ width: \"100%\" }} disabled={isLoading || message.trim().length === 0}>\n                  {isLoading ? \"Sending...\" : \"SEND\"}\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n        <div className=\"top tableContainer\">\n          <h1>Latest broadcasts</h1>\n          <List notifications={notifications} setNotifications={setNotifications} onBroadcast={handleBroadcast}/>\n        </div>\n      </div>\n    </div>\n  );*/\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"newBroadcast\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(NewBroadcast, \"53AFMk8tRw3VFsD0xH36n7xp6DM=\");\n_c = NewBroadcast;\nexport default NewBroadcast;\nvar _c;\n$RefreshReg$(_c, \"NewBroadcast\");","map":{"version":3,"names":["useState","List","axios","jsxDEV","_jsxDEV","NewBroadcast","_s","selectedTopic","setSelectedTopic","message","setMessage","isLoading","setIsLoading","notifications","setNotifications","lastRefreshed","setLastRefreshed","handleTopicChange","event","target","value","handleMessageChange","newMessage","length","handleSubmit","preventDefault","console","log","broadcastData","category","response","post","data","error","handleBroadcast","fetchNotifications","get","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/josephjuarez/Documents/Dev/jja/gila-front/src/pages/new-broadcast/NewBroadcast.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport List from \"../../components/list/List\"\nimport \"./new-broadcast.scss\"\nimport axios from \"axios\";\n\nconst NewBroadcast = () => {\n  const [selectedTopic, setSelectedTopic] = useState(\"SPORTS\");\n  const [message, setMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [lastRefreshed, setLastRefreshed] = useState(null);\n\n  const handleTopicChange = (event) => {\n    setSelectedTopic(event.target.value);\n  }\n\n  const handleMessageChange = (event) => {\n    const newMessage = event.target.value;\n    if (newMessage.length <= 150) {\n      setMessage(newMessage);\n    }\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    console.log(\"Selected topic: \", selectedTopic);\n    console.log(\"Message: \", message);\n\n    setIsLoading(true);\n\n    const broadcastData = {\n      category: selectedTopic,\n      message: message,\n    };\n\n    try {\n      const response = await axios.post(\n        \"http://localhost:8080/api/notifications/send\",\n        broadcastData\n      );\n      console.log(\"Broadcast sent:\", response.data);\n      setSelectedTopic(\"SPORTS\");\n      setMessage(\"\");\n    } catch (error) {\n      console.error(\"Error sending broadcast:\", error);\n    }\n    setIsLoading(false);\n    handleBroadcast();\n  };\n\n  const handleBroadcast = () => {\n    console.log('so it was runned?');\n    fetchNotifications();\n  };\n\n  const fetchNotifications = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/notifications/last');\n      setNotifications(response.data);\n      //setLastRefreshed(new Date());\n    } catch (error) {\n      console.error('Error fetching notifications:', error);\n    }\n  };\n\n  /*return (\n    <div className=\"newBroadcast\">\n      <div className=\"newBroadcastContainer\">\n        <div className=\"top\" style={{backgroundColor: \"red\"}}>\n          <h1>Send a new broadcast</h1>\n          <form className=\"broadcast-form\" onSubmit={handleSubmit}>\n            <div className=\"row align-items-end\">\n              <div className=\"col-md-2\">\n                <label htmlFor=\"topic\" className=\"labelForm\">Topic:</label>\n                <select id=\"topic\" className=\"form-select\" value={selectedTopic} onChange={handleTopicChange}>\n                  <option value=\"SPORTS\">SPORTS</option>\n                  <option value=\"FINANCE\">FINANCE</option>\n                  <option value=\"FILMS\">FILMS</option>\n                </select>\n              </div>\n              <div className=\"col-md-8\">\n                <label htmlFor=\"message\" className=\"labelForm\">Message:</label>\n                <textarea\n                  id=\"message\"\n                  className=\"form-control\"\n                  value={message}\n                  onChange={handleMessageChange}\n                  rows=\"1\"\n                  maxLength=\"150\"\n                />\n              </div>\n              <div className=\"col-md-2\">\n                <button type=\"submit\" className=\"btn btn-dark\" style={{ width: \"100%\" }} disabled={isLoading || message.trim().length === 0}>\n                  {isLoading ? \"Sending...\" : \"SEND\"}\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n        <div className=\"top tableContainer\">\n          <h1>Latest broadcasts</h1>\n          <List notifications={notifications} setNotifications={setNotifications} onBroadcast={handleBroadcast}/>\n        </div>\n      </div>\n    </div>\n  );*/\n  return (\n    <div className=\"newBroadcast\"></div>\n  );\n}\n\nexport default NewBroadcast;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}