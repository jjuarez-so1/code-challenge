{"ast":null,"code":"import _initializerDefineProperty from \"/Users/josephjuarez/Documents/Dev/jja/notifications-code-challenge/gila-front/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty.js\";\nimport _applyDecoratedDescriptor from \"/Users/josephjuarez/Documents/Dev/jja/notifications-code-challenge/gila-front/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\";\nimport _initializerWarningHelper from \"/Users/josephjuarez/Documents/Dev/jja/notifications-code-challenge/gila-front/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper.js\";\nvar _dec, _dec2, _class, _class2, _descriptor, _dec3, _dec4, _class4, _class5, _descriptor2, _dec5, _dec6, _class7, _class8, _descriptor3;\nimport { injectable, inject } from \"inversify\";\nimport \"reflect-metadata\";\nimport { TYPES } from \"./types\";\nimport axios from \"axios\";\nlet KpiRepositoryImpl = (_dec = injectable(), _dec2 = inject(TYPES.ApiBaseUrl), _dec(_class = (_class2 = class KpiRepositoryImpl {\n  constructor() {\n    _initializerDefineProperty(this, \"_apiUrl\", _descriptor, this);\n  }\n  async fetchKpis() {\n    console.log('from kpis');\n    try {\n      const response = await axios.get(`${this._apiUrl}/kpis`);\n      return response.data;\n    } catch (error) {\n      throw new Error(\"Error fetching KPIs\");\n    }\n  }\n}, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"_apiUrl\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);\nlet NotificationsRepositoryImpl = (_dec3 = injectable(), _dec4 = inject(TYPES.ApiBaseUrl), _dec3(_class4 = (_class5 = class NotificationsRepositoryImpl {\n  constructor() {\n    _initializerDefineProperty(this, \"_apiUrl\", _descriptor2, this);\n  }\n  async sendNotification(topic, message) {\n    try {\n      const notificationData = {\n        category: topic,\n        message: message\n      };\n      await axios.post(`${this._apiUrl}/notifications/send`, notificationData);\n    } catch (error) {\n      throw new Error(\"Error sending notification\");\n    }\n  }\n  async getLastNotifications() {\n    try {\n      const response = await axios.get(`${this._apiUrl}/notifications/last`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching last notifications\", error);\n      throw new Error(\"Error fetching last notifications\");\n    }\n  }\n}, (_descriptor2 = _applyDecoratedDescriptor(_class5.prototype, \"_apiUrl\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class5)) || _class4);\nlet MessagesRepositoryImpl = (_dec5 = injectable(), _dec6 = inject(TYPES.ApiBaseUrl), _dec5(_class7 = (_class8 = class MessagesRepositoryImpl {\n  constructor() {\n    _initializerDefineProperty(this, \"_apiUrl\", _descriptor3, this);\n  }\n  async getMessagesByNotification(notificationId, page, pageSize) {\n    try {\n      const response = await fetch(`${this._apiUrl}/messages/by-notification?notificationId=${notificationId}&page=${page}&pageSize=${pageSize}`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const responseData = await response.json();\n      return responseData;\n    } catch (error) {\n      console.error(\"Error fetching data\", error);\n      return {\n        messages: [],\n        totalCount: 0\n      };\n    }\n  }\n}, (_descriptor3 = _applyDecoratedDescriptor(_class8.prototype, \"_apiUrl\", [_dec6], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class8)) || _class7);\nexport { KpiRepositoryImpl, NotificationsRepositoryImpl, MessagesRepositoryImpl };","map":{"version":3,"names":["injectable","inject","TYPES","axios","KpiRepositoryImpl","_dec","_dec2","ApiBaseUrl","_class","_class2","constructor","_initializerDefineProperty","_descriptor","fetchKpis","console","log","response","get","_apiUrl","data","error","Error","_applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer","NotificationsRepositoryImpl","_dec3","_dec4","_class4","_class5","_descriptor2","sendNotification","topic","message","notificationData","category","post","getLastNotifications","MessagesRepositoryImpl","_dec5","_dec6","_class7","_class8","_descriptor3","getMessagesByNotification","notificationId","page","pageSize","fetch","ok","responseData","json","messages","totalCount"],"sources":["/Users/josephjuarez/Documents/Dev/jja/notifications-code-challenge/gila-front/src/inversify/entities.ts"],"sourcesContent":["import { injectable, inject } from \"inversify\";\nimport \"reflect-metadata\";\nimport { MessagesRepository, MessagesResponse, Notification, NotificationsRepository } from \"./interfaces\";\nimport { TYPES } from \"./types\";\nimport { KpiRepository } from \"../repository/KpiRepository\";\nimport KpiData from \"../components/kpi-cards/KpiData\";\nimport axios from \"axios\";\n\n@injectable()\nclass KpiRepositoryImpl implements KpiRepository {\n    @inject(TYPES.ApiBaseUrl) private _apiUrl: string | any;\n\n    async fetchKpis(): Promise<KpiData> {\n        console.log('from kpis');\n        try {\n            const response = await axios.get(`${this._apiUrl}/kpis`);\n            return response.data;\n        } catch (error) {\n            throw new Error(\"Error fetching KPIs\");\n        }\n    }\n}\n\n@injectable()\nclass NotificationsRepositoryImpl implements NotificationsRepository {\n    @inject(TYPES.ApiBaseUrl) private _apiUrl: string | any;\n\n    async sendNotification(topic: string, message: string): Promise<void> {\n        try {\n            const notificationData = {\n                category: topic,\n                message: message,\n            };\n\n            await axios.post(\n                `${this._apiUrl}/notifications/send`,\n                notificationData\n            );\n        } catch (error) {\n            throw new Error(\"Error sending notification\");\n        }\n    }\n\n    async getLastNotifications(): Promise<Notification[]> {\n      try {\n        const response = await axios.get<Notification[]>(\n          `${this._apiUrl}/notifications/last`\n        );\n        return response.data;\n      } catch (error) {\n        console.error(\"Error fetching last notifications\", error);\n        throw new Error(\"Error fetching last notifications\");\n      }\n    }\n}\n\n@injectable()\nclass MessagesRepositoryImpl implements MessagesRepository {\n  @inject(TYPES.ApiBaseUrl) private _apiUrl: string | any;\n  async getMessagesByNotification(notificationId: number, page: number, pageSize: number): Promise<MessagesResponse> {\n    try {\n      const response = await fetch(\n        `${this._apiUrl}/messages/by-notification?notificationId=${notificationId}&page=${page}&pageSize=${pageSize}`\n      );\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const responseData: MessagesResponse = await response.json();\n      return responseData;\n    } catch (error) {\n      console.error(\"Error fetching data\", error);\n      return {\n        messages: [],\n        totalCount: 0,\n      };\n    }\n  }\n}\n\nexport { KpiRepositoryImpl, NotificationsRepositoryImpl, MessagesRepositoryImpl };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}