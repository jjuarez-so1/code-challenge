{"ast":null,"code":"import * as ERROR_MSGS from \"../constants/error_msgs\";\nexport function isStackOverflowExeption(error) {\n  return error instanceof RangeError || error.message === ERROR_MSGS.STACK_OVERFLOW;\n}\nexport var tryAndThrowErrorIfStackOverflow = function (fn, errorCallback) {\n  try {\n    return fn();\n  } catch (error) {\n    if (isStackOverflowExeption(error)) {\n      error = errorCallback();\n    }\n    throw error;\n  }\n};","map":{"version":3,"names":["ERROR_MSGS","isStackOverflowExeption","error","RangeError","message","STACK_OVERFLOW","tryAndThrowErrorIfStackOverflow","fn","errorCallback"],"sources":["../../src/utils/exceptions.ts"],"sourcesContent":[null],"mappings":"AAAA,OAAO,KAAKA,UAAU,MAAM,yBAAyB;AAErD,OAAM,SAAUC,uBAAuBA,CAACC,KAAY;EAClD,OACEA,KAAK,YAAYC,UAAU,IAC3BD,KAAK,CAACE,OAAO,KAAKJ,UAAU,CAACK,cAAc;AAE/C;AAEA,OAAO,IAAMC,+BAA+B,GAAG,SAAAA,CAAIC,EAAW,EAAEC,aAA0B;EACxF,IAAI;IACF,OAAOD,EAAE,EAAE;GACZ,CAAC,OAAOL,KAAK,EAAE;IACd,IAAID,uBAAuB,CAACC,KAAK,CAAC,EAAE;MAClCA,KAAK,GAAGM,aAAa,EAAE;;IAEzB,MAAMN,KAAK;;AAEf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}