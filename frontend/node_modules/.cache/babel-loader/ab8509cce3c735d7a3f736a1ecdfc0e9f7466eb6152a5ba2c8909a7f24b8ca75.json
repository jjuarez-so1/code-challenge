{"ast":null,"code":"import { BindingCount } from \"../bindings/binding_count\";\nimport * as ERROR_MSGS from \"../constants/error_msgs\";\nimport { BindingTypeEnum, TargetTypeEnum } from \"../constants/literal_types\";\nimport * as METADATA_KEY from \"../constants/metadata_keys\";\nimport { isStackOverflowExeption } from \"../utils/exceptions\";\nimport { circularDependencyToException, getServiceIdentifierAsString, listMetadataForTarget, listRegisteredBindingsForServiceIdentifier } from \"../utils/serialization\";\nimport { Context } from \"./context\";\nimport { Metadata } from \"./metadata\";\nimport { Plan } from \"./plan\";\nimport { getBaseClassDependencyCount, getDependencies, getFunctionName } from \"./reflection_utils\";\nimport { Request } from \"./request\";\nimport { Target } from \"./target\";\nfunction getBindingDictionary(cntnr) {\n  return cntnr._bindingDictionary;\n}\nfunction _createTarget(isMultiInject, targetType, serviceIdentifier, name, key, value) {\n  var metadataKey = isMultiInject ? METADATA_KEY.MULTI_INJECT_TAG : METADATA_KEY.INJECT_TAG;\n  var injectMetadata = new Metadata(metadataKey, serviceIdentifier);\n  var target = new Target(targetType, name, serviceIdentifier, injectMetadata);\n  if (key !== undefined) {\n    var tagMetadata = new Metadata(key, value);\n    target.metadata.push(tagMetadata);\n  }\n  return target;\n}\nfunction _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target) {\n  var bindings = getBindings(context.container, target.serviceIdentifier);\n  var activeBindings = [];\n  if (bindings.length === BindingCount.NoBindingsAvailable && context.container.options.autoBindInjectable && typeof target.serviceIdentifier === \"function\" && metadataReader.getConstructorMetadata(target.serviceIdentifier).compilerGeneratedMetadata) {\n    context.container.bind(target.serviceIdentifier).toSelf();\n    bindings = getBindings(context.container, target.serviceIdentifier);\n  }\n  if (!avoidConstraints) {\n    activeBindings = bindings.filter(function (binding) {\n      var request = new Request(binding.serviceIdentifier, context, parentRequest, binding, target);\n      return binding.constraint(request);\n    });\n  } else {\n    activeBindings = bindings;\n  }\n  _validateActiveBindingCount(target.serviceIdentifier, activeBindings, target, context.container);\n  return activeBindings;\n}\nfunction _validateActiveBindingCount(serviceIdentifier, bindings, target, container) {\n  switch (bindings.length) {\n    case BindingCount.NoBindingsAvailable:\n      if (target.isOptional()) {\n        return bindings;\n      } else {\n        var serviceIdentifierString = getServiceIdentifierAsString(serviceIdentifier);\n        var msg = ERROR_MSGS.NOT_REGISTERED;\n        msg += listMetadataForTarget(serviceIdentifierString, target);\n        msg += listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);\n        throw new Error(msg);\n      }\n    case BindingCount.OnlyOneBindingAvailable:\n      return bindings;\n    case BindingCount.MultipleBindingsAvailable:\n    default:\n      if (!target.isArray()) {\n        var serviceIdentifierString = getServiceIdentifierAsString(serviceIdentifier);\n        var msg = ERROR_MSGS.AMBIGUOUS_MATCH + \" \" + serviceIdentifierString;\n        msg += listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);\n        throw new Error(msg);\n      } else {\n        return bindings;\n      }\n  }\n}\nfunction _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, parentRequest, target) {\n  var activeBindings;\n  var childRequest;\n  if (parentRequest === null) {\n    activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, null, target);\n    childRequest = new Request(serviceIdentifier, context, null, activeBindings, target);\n    var thePlan = new Plan(context, childRequest);\n    context.addPlan(thePlan);\n  } else {\n    activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target);\n    childRequest = parentRequest.addChildRequest(target.serviceIdentifier, activeBindings, target);\n  }\n  activeBindings.forEach(function (binding) {\n    var subChildRequest = null;\n    if (target.isArray()) {\n      subChildRequest = childRequest.addChildRequest(binding.serviceIdentifier, binding, target);\n    } else {\n      if (binding.cache) {\n        return;\n      }\n      subChildRequest = childRequest;\n    }\n    if (binding.type === BindingTypeEnum.Instance && binding.implementationType !== null) {\n      var dependencies = getDependencies(metadataReader, binding.implementationType);\n      if (!context.container.options.skipBaseClassChecks) {\n        var baseClassDependencyCount = getBaseClassDependencyCount(metadataReader, binding.implementationType);\n        if (dependencies.length < baseClassDependencyCount) {\n          var error = ERROR_MSGS.ARGUMENTS_LENGTH_MISMATCH(getFunctionName(binding.implementationType));\n          throw new Error(error);\n        }\n      }\n      dependencies.forEach(function (dependency) {\n        _createSubRequests(metadataReader, false, dependency.serviceIdentifier, context, subChildRequest, dependency);\n      });\n    }\n  });\n}\nfunction getBindings(container, serviceIdentifier) {\n  var bindings = [];\n  var bindingDictionary = getBindingDictionary(container);\n  if (bindingDictionary.hasKey(serviceIdentifier)) {\n    bindings = bindingDictionary.get(serviceIdentifier);\n  } else if (container.parent !== null) {\n    bindings = getBindings(container.parent, serviceIdentifier);\n  }\n  return bindings;\n}\nfunction plan(metadataReader, container, isMultiInject, targetType, serviceIdentifier, key, value, avoidConstraints) {\n  if (avoidConstraints === void 0) {\n    avoidConstraints = false;\n  }\n  var context = new Context(container);\n  var target = _createTarget(isMultiInject, targetType, serviceIdentifier, \"\", key, value);\n  try {\n    _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, null, target);\n    return context;\n  } catch (error) {\n    if (isStackOverflowExeption(error)) {\n      circularDependencyToException(context.plan.rootRequest);\n    }\n    throw error;\n  }\n}\nfunction createMockRequest(container, serviceIdentifier, key, value) {\n  var target = new Target(TargetTypeEnum.Variable, \"\", serviceIdentifier, new Metadata(key, value));\n  var context = new Context(container);\n  var request = new Request(serviceIdentifier, context, null, [], target);\n  return request;\n}\nexport { plan, createMockRequest, getBindingDictionary };","map":{"version":3,"names":["BindingCount","ERROR_MSGS","BindingTypeEnum","TargetTypeEnum","METADATA_KEY","isStackOverflowExeption","circularDependencyToException","getServiceIdentifierAsString","listMetadataForTarget","listRegisteredBindingsForServiceIdentifier","Context","Metadata","Plan","getBaseClassDependencyCount","getDependencies","getFunctionName","Request","Target","getBindingDictionary","cntnr","_bindingDictionary","_createTarget","isMultiInject","targetType","serviceIdentifier","name","key","value","metadataKey","MULTI_INJECT_TAG","INJECT_TAG","injectMetadata","target","undefined","tagMetadata","metadata","push","_getActiveBindings","metadataReader","avoidConstraints","context","parentRequest","bindings","getBindings","container","activeBindings","length","NoBindingsAvailable","options","autoBindInjectable","getConstructorMetadata","compilerGeneratedMetadata","bind","toSelf","filter","binding","request","constraint","_validateActiveBindingCount","isOptional","serviceIdentifierString","msg","NOT_REGISTERED","Error","OnlyOneBindingAvailable","MultipleBindingsAvailable","isArray","AMBIGUOUS_MATCH","_createSubRequests","childRequest","thePlan","addPlan","addChildRequest","forEach","subChildRequest","cache","type","Instance","implementationType","dependencies","skipBaseClassChecks","baseClassDependencyCount","error","ARGUMENTS_LENGTH_MISMATCH","dependency","bindingDictionary","hasKey","get","parent","plan","rootRequest","createMockRequest","Variable"],"sources":["../../src/planning/planner.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}