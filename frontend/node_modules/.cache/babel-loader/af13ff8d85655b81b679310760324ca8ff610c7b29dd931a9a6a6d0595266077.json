{"ast":null,"code":"import axios from \"axios\";\nexport class KpiRepositoryImpl {\n  constructor(apiUrl) {\n    this.apiUrl = void 0;\n    this.apiUrl = apiUrl;\n  }\n  async fetchKpis() {\n    try {\n      const response = await axios.get(this.apiUrl);\n      return response.data;\n    } catch (error) {\n      throw new Error(\"Error fetching KPIs\");\n    }\n  }\n}","map":{"version":3,"names":["axios","KpiRepositoryImpl","constructor","apiUrl","fetchKpis","response","get","data","error","Error"],"sources":["/Users/josephjuarez/Documents/Dev/jja/notifications-code-challenge/gila-front/src/repository/KpiRepositoryImpl.ts"],"sourcesContent":["import axios from \"axios\";\nimport { KpiRepository } from \"./KpiRepository\";\nimport KpiData from \"../components/kpi-cards/KpiData\";\n\nexport class KpiRepositoryImpl implements KpiRepository {\n    private readonly apiUrl: string;\n\n    constructor(apiUrl: string) {\n        this.apiUrl = apiUrl;\n    }\n\n    async fetchKpis(): Promise<KpiData> {\n        try {\n            const response = await axios.get(this.apiUrl);\n            return response.data;\n        } catch (error) {\n            throw new Error(\"Error fetching KPIs\");\n        }\n    }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAIzB,OAAO,MAAMC,iBAAiB,CAA0B;EAGpDC,WAAWA,CAACC,MAAc,EAAE;IAAA,KAFXA,MAAM;IAGnB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB;EAEA,MAAMC,SAASA,CAAA,EAAqB;IAChC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,IAAI,CAACH,MAAM,CAAC;MAC7C,OAAOE,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;IAC1C;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}