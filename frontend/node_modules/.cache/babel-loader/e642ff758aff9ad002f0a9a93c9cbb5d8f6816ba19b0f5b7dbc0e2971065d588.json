{"ast":null,"code":"import { Container } from \"inversify\";\nimport { TYPES } from \"./types\";\nimport { KpiRepositoryImpl, NotificationsRepositoryImpl, MessageRepositoryImpl } from \"./entities\";\nimport { CATEGORIES, API_BASE_URL } from \"../constants/constants\";\nconst myContainer = new Container();\nmyContainer.bind(TYPES.KpiRepository).to(KpiRepositoryImpl);\nmyContainer.bind(TYPES.NotificationsRepository).to(NotificationsRepositoryImpl);\nmyContainer.bind(TYPES.NotificationsRepository).to(MessageRepositoryImpl);\nmyContainer.bind(TYPES.ApiBaseUrl).toConstantValue(API_BASE_URL);\nmyContainer.bind(TYPES.Categories).toConstantValue(CATEGORIES);\nexport { myContainer };","map":{"version":3,"names":["Container","TYPES","KpiRepositoryImpl","NotificationsRepositoryImpl","MessageRepositoryImpl","CATEGORIES","API_BASE_URL","myContainer","bind","KpiRepository","to","NotificationsRepository","ApiBaseUrl","toConstantValue","Categories"],"sources":["/Users/josephjuarez/Documents/Dev/jja/notifications-code-challenge/gila-front/src/inversify/inversify.config.ts"],"sourcesContent":["import { Container } from \"inversify\";\nimport { TYPES } from \"./types\";\nimport { NotificationsRepository, Category, MessageRepository } from \"./interfaces\";\nimport { KpiRepositoryImpl, NotificationsRepositoryImpl, MessageRepositoryImpl } from \"./entities\";\nimport { KpiRepository } from \"../repository/KpiRepository\";\nimport { CATEGORIES, API_BASE_URL } from \"../constants/constants\";\n\nconst myContainer = new Container();\nmyContainer.bind<KpiRepository>(TYPES.KpiRepository).to(KpiRepositoryImpl);\nmyContainer.bind<NotificationsRepository>(TYPES.NotificationsRepository).to(NotificationsRepositoryImpl);\nmyContainer.bind<MessageRepository>(TYPES.NotificationsRepository).to(MessageRepositoryImpl);\nmyContainer.bind<string>(TYPES.ApiBaseUrl).toConstantValue(API_BASE_URL);\nmyContainer.bind<Category[]>(TYPES.Categories).toConstantValue(CATEGORIES);\n\nexport { myContainer };\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,WAAW;AACrC,SAASC,KAAK,QAAQ,SAAS;AAE/B,SAASC,iBAAiB,EAAEC,2BAA2B,EAAEC,qBAAqB,QAAQ,YAAY;AAElG,SAASC,UAAU,EAAEC,YAAY,QAAQ,wBAAwB;AAEjE,MAAMC,WAAW,GAAG,IAAIP,SAAS,CAAC,CAAC;AACnCO,WAAW,CAACC,IAAI,CAAgBP,KAAK,CAACQ,aAAa,CAAC,CAACC,EAAE,CAACR,iBAAiB,CAAC;AAC1EK,WAAW,CAACC,IAAI,CAA0BP,KAAK,CAACU,uBAAuB,CAAC,CAACD,EAAE,CAACP,2BAA2B,CAAC;AACxGI,WAAW,CAACC,IAAI,CAAoBP,KAAK,CAACU,uBAAuB,CAAC,CAACD,EAAE,CAACN,qBAAqB,CAAC;AAC5FG,WAAW,CAACC,IAAI,CAASP,KAAK,CAACW,UAAU,CAAC,CAACC,eAAe,CAACP,YAAY,CAAC;AACxEC,WAAW,CAACC,IAAI,CAAaP,KAAK,CAACa,UAAU,CAAC,CAACD,eAAe,CAACR,UAAU,CAAC;AAE1E,SAASE,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}